syntax = "proto3";

package yandex.cloud.priv.serverless.functions.v1.inner;

import "google/protobuf/empty.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/serverless/functions/v1/inner/common.proto";
import "yandex/cloud/priv/serverless/functions/v1/function.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/serverless/functions/v1/inner;inner";
option java_outer_classname = "PSFPS";

// errors:
// NOT_FOUND = bucket/object not found
// INVALID_ARGUMENT = sha256 does not match
// FAILED_PRECONDITION = cannot unzip user image
// RESOURCE_EXHAUSTED = unzipped file required too much disk space
// PERMISSION_DENIED = system account does not have permission to access source_bucket
service PackageService {
  rpc BuildPackage (BuildPackageRequest) returns (ObjectStorageReference) {
    option (yandex.cloud.api.tools.method).lint_skip.contains_resource_name = true;
  };
  rpc PatchPackage(PatchPackageRequest) returns (ObjectStorageReference) {
    option (yandex.cloud.api.tools.method).lint_skip.contains_resource_name = true;
  };
  rpc DeleteImage(DeleteImageRequest) returns (google.protobuf.Empty);

  rpc BuildFromDockerImage(BuildPackageFromDockerImageRequest) returns (ObjectStorageReference);
}

message BuildPackageRequest {
  string function_version_id = 1 [(required) = true];
  Package source = 2 [(required) = true];
  string output_path = 3 [(required) = true];
}

message PatchPackageRequest {
  enum Action {
    ACTION_UNSPECIFIED = 0;
    PUT = 1;
    DELETE = 2;
  }

  message File {
    string path = 1 [(required) = true];
    bytes content = 2 [(length) = "<=10485760"];
    bool executable = 3;
    Action action = 4;
  }

  string function_version_id = 1;
  ObjectStorageReference origin = 2;
  string output_path = 3 [(required) = true];
  repeated File files = 4;
}

message DeleteImageRequest {
  ObjectStorageReference image = 1 [(required) = true];
}

message BuildPackageFromDockerImageRequest {
  string resource_id = 1 [(required) = true];
  // image_url should contain image digest.
  string image_url = 2 [(required) = true];
  string output_path = 3 [(required) = true];
}
