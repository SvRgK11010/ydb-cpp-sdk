syntax = "proto3";

package yandex.cloud.priv.iam.v1.compute;

import "yandex/cloud/priv/servicecontrol/v1/resource.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/iam/v1/compute;iam_compute";
option java_outer_classname = "PCOLS";

service OsLoginService {
  // DEPRECATED.
  rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse);

  rpc Get (GetOsLoginRequest) returns (GetOsLoginResponse);
  rpc List (ListOsLoginsRequest) returns (ListOsLoginsResponse);
}

message GetUserInfoRequest {
  // ID of the cloud to search for os login in.
  string cloud_id = 1 [(required) = true, (length) = "<=50"];
  // A resource path for compute instance. Same one to be passed to AccessService#authorize().
  // Must consist of [compute.instance, resource-manager.folder] in that order.
  // cloud_id is automatically appended from request.
  repeated servicecontrol.v1.Resource instance_resource_path = 2 [(size) = "2"];
  oneof subject {
    option (exactly_one) = true;
    string subject_id = 3 [(length) = "<=50"];
    string os_login = 4 [(length) = "<=32"];
    int64 os_uid = 5 [(value) = ">=0"];
  }
}

message GetUserInfoResponse {
  string subject_id = 1;
  string os_login = 2;
  int64 os_uid = 3;
  bool is_admin = 4;
  repeated SshKeyInfo ssh_keys = 5;
}

message GetOsLoginRequest {
  // ID of the cloud to search for os login in.
  string cloud_id = 1 [(required) = true, (length) = "<=50"];
  oneof subject {
    option (exactly_one) = true;
    string subject_id = 3 [(length) = "<=50"];
    string os_login = 4 [(length) = "<=32"];
    int64 os_uid = 5 [(value) = ">=0"];
  }
}

message GetOsLoginResponse {
  OsLoginInfo os_login_info = 1;
}

message ListOsLoginsRequest {
  // ID of the cloud to search for os login in.
  string cloud_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "<=2048"];
  string page_token = 3 [(length) = "<=100"];
}

message ListOsLoginsResponse {
  repeated OsLoginInfo os_login_infos = 1;
  string next_page_token = 2;
}

message OsLoginInfo {
  string subject_id = 1;
  SubjectType subject_type = 2;
  string os_login = 3;
  int64 os_uid = 4;
  repeated SshKeyInfo ssh_keys = 5;
}

enum SubjectType {
  SUBJECT_TYPE_UNSPECIFIED = 0;
  USER_ACCOUNT = 1;
  SERVICE_ACCOUNT = 2;
}

message SshKeyInfo {
  string id = 1;
  string data = 2;
}
