role_groups:
  iam:
    name: IAM roles

roles:

  ##############################################################################
  # Public Roles
  ##############################################################################

  iam.viewer:
    groups: [iam]
    name: IAM-viewer
    visibility: public
    description: ''
    scopes:
      - yc.iam.serviceAccounts.accessKey.get
      - yc.iam.serviceAccounts.apiKey.get
      - yc.iam.serviceAccounts.sshKey.get
      - yc.iam.serviceAccounts.get
      - yc.resource-manager.folders.get # ?
      - yc.resource-manager.clouds.get # ?
    permissions:
      - iam.accessBindings.list
      - iam.authorizedKeys.get
      - iam.cloudOperations.list
      - iam.cloudUser.get
      - iam.cloudUsers.list
      - iam.cloudUsers.superList
      - iam.federations.get
      - iam.folderOperations.list
      - iam.operations.{get,list}
      - iam.roles.list
      - iam.serviceAccounts.listAccessBindings
      - iam.tokenKeys.get
      - iam.userAccounts.get
      - iam.userOperations.list
      - iam.quotas.get

  iam.editor:
    groups: [iam]
    name: IAM-editor
    visibility: public
    description: ''
    includedRoles:
      - iam.viewer
    scopes:
      - yc.iam.serviceAccounts.manage
      - yc.resource-manager.folders.manage
      - yc.iam.serviceAccounts.use
    permissions:
      - iam.authorizedKeys.{create,delete,update}
      - iam.cloud.update
      - iam.clouds.getSettings
      - iam.clouds.updateSettings
      - iam.cloudUser.delete
      - iam.folders.getSettings
      - iam.folders.updateSettings
      - iam.tokenKeys.{create,delete,update}
      - iam.userAccounts.{create,delete}SshKey

  iam.admin:
    groups: [iam]
    name: IAM-admin
    visibility: public
    description: ''
    includedRoles:
      - iam.editor
      - iam.serviceAccounts.admin
    scopes:
      - yc.iam.federations.manage
      - yc.iam.accessBindings.manage
      - yc.iam.clouds.manage
    permissions:
      - iam.cloudUser.create

  iam.serviceAccounts.admin:
    groups: [iam]
    name: Администратор сервисных аккаунтов
    visibility: public
    description: ''
    scopes:
      - yc.iam.serviceAccounts.manage
      - yc.iam.authorizedKeys.get
      - yc.iam.serviceAccounts.accessKey.get
      - yc.iam.serviceAccounts.apiKey.get
      - yc.iam.serviceAccounts.sshKey.get
      - yc.iam.serviceAccounts.get
      - yc.iam.serviceAccounts.use
      - yc.iam.serviceAccounts.issueToken
      - yc.resource-manager.folders.get
    permissions:
      - iam.serviceAccounts.{list,update}AccessBindings

  iam.serviceAccounts.tokenCreator:
    groups: [iam]
    name: Роль для получения токена сервис-аккаунта, на который она назначена
    visibility: public
    description: ''
    scopes:
      - yc.iam.serviceAccounts.issueToken

  iam.serviceAccounts.user:
    groups: [iam]
    name: Пользователь сервисного аккаунта
    visibility: public
    description: ' специальная роль для доступа к сервисным аккаунтам'
    scopes:
      - yc.iam.serviceAccounts.get
      - yc.iam.serviceAccounts.use
    permissions: []

  iam.serviceAccounts.accessKeyAdmin:
    groups: [iam]
    name: Администратор access-ключей
    visibility: public
    description: ''
    permissions:
      - iam.serviceAccounts.{create,get,update,delete}AccessKey

  iam.serviceAccounts.apiKeyAdmin:
    groups: [iam]
    name: Администратор API-ключей
    visibility: public
    description: ''
    permissions:
      - iam.serviceAccounts.{create,get,update,delete}ApiKey

  iam.serviceAccounts.authorizedKeyAdmin:
    groups: [iam]
    name: Администратор авторизованных ключей
    visibility: public
    description: ''
    permissions:
      - iam.authorizedKeys.{create,get,update,delete}

  iam.serviceAccounts.keyAdmin:
    groups: [iam]
    name: Администратор ключей
    visibility: public
    description: ''
    includedRoles:
      - iam.serviceAccounts.accessKeyAdmin
      - iam.serviceAccounts.apiKeyAdmin
      - iam.serviceAccounts.authorizedKeyAdmin

  ##############################################################################
  # Support Roles
  ##############################################################################

  iam.support:
    groups: [iam, staff]
    name: Support IAM
    visibility: internal
    description: Role for support engineers to see access bindings and premissions
    permissions:
      - iam.accessBindings.list
      - iam.authorizedKeys.get
      - iam.cloudOperations.list
      - iam.cloudUser.get
      - iam.cloudUsers.list
      - iam.cloudUsers.superList
      - iam.clouds.{get,list}
      - iam.folderOperations.list
      - iam.folders.{get,list}
      - iam.folders.create
      - iam.operations.{get,list}
      - iam.roles.list
      - iam.serviceAccounts.getAccessKey
      - iam.serviceAccounts.getApiKey
      - iam.serviceAccounts.getSshKey
      - iam.serviceAccounts.listAccessKeys
      - iam.serviceAccounts.listApiKeys
      - iam.serviceAccounts.{get,list}
      - iam.serviceAccounts.listAccessBindings
      - iam.tokenKeys.get
      - iam.userAccounts.get
      - iam.userAccounts.getAccessKey
      - iam.userAccounts.getSettings
      - iam.userAccounts.getSshKey
      - iam.userAccounts.listAccessKeys
      - iam.userOperations.list
      - iam.federations.{get,list}
      - iam.quotas.updateLimit
      - resource-manager.clouds.listAccessBindings
      - resource-manager.clouds.listRestrictions
      - resource-manager.clouds.listPermissionStages
      - resource-manager.clouds.updatePermissionStages
      - resource-manager.folders.listAccessBindings

  iam.supportAdmin:
    groups: [iam, staff]
    name: Support IAM Admin
    visibility: internal
    description: Privileged Operations in IAM for support engineers
    includedRoles:
      - iam.support
    permissions: []

  ##############################################################################
  # On-call Roles
  ##############################################################################

  iam.onCall:
    groups: [iam, staff]
    name: On-call IAM
    visibility: internal
    description: Role for IAM on-call engineers to see access bindings and premissions
    includedRoles:
      - onCall
    permissions:
      - iam.accessBindings.list
      - iam.authorizedKeys.get
      - iam.cloudOperations.list
      - iam.cloudUser.get
      - iam.cloudUsers.list
      - iam.cloudUsers.superList
      - iam.clouds.{get,list}
      - iam.folderOperations.list
      - iam.folders.{get,list}
      - iam.folders.create
      - iam.operations.{get,list}
      - iam.roles.list
      - iam.serviceAccounts.getAccessKey
      - iam.serviceAccounts.getApiKey
      - iam.serviceAccounts.getSshKey
      - iam.serviceAccounts.listAccessKeys
      - iam.serviceAccounts.listApiKeys
      - iam.serviceAccounts.{get,list}
      - iam.serviceAccounts.listAccessBindings
      - iam.tokenKeys.get
      - iam.userAccounts.get
      - iam.userAccounts.getAccessKey
      - iam.userAccounts.getSettings
      - iam.userAccounts.getSshKey
      - iam.userAccounts.listAccessKeys
      - iam.userOperations.list
      - iam.federations.{get,list}
      - resource-manager.clouds.listAccessBindings
      - resource-manager.clouds.listRestrictions
      - resource-manager.clouds.listPermissionStages
      - resource-manager.clouds.updatePermissionStages
      - resource-manager.folders.listAccessBindings

  iam.onCallAdmin:
    groups: [iam, staff]
    name: On-call IAM Admin
    visibility: internal
    description: Privileged Operations in IAM for on-call engineers
    includedRoles:
      - iam.onCall
      - internal.iam.metaModelEditor
    permissions:
      - iam.accessBinding.delete
      - iam.accessBindings.update
      - iam.accessBindings.manageOwners
      - iam.authorizedKeys.delete
      - iam.cloudUser.delete
      - iam.clouds.delete
      - iam.folders.delete
      - iam.serviceAccounts.delete
      - iam.serviceAccounts.deleteAccessKey
      - iam.serviceAccounts.deleteApiKey
      - iam.serviceAccounts.deleteSshKey
      - iam.tokenKeys.delete
      - iam.userAccounts.{delete,update}AccessKey
      - iam.userAccounts.deleteSshKey
      - iam.quotas.updateLimit
      - iam.totpProfiles.manage


  ##############################################################################
  # Internal Roles
  ##############################################################################

  internal.iam.restrictedTokenCreator:
    groups: [iam]
    name: Роль для получения токена сервис-аккаунта, который лежит в folderе на который назначена эта роль
    visibility: internal
    description: ''
    permissions:
      - iam.serviceAccounts.issueTokenForRestrictedAlgorithm

  internal.iam.prefixedAccessKeyCreator:
    groups: [iam]
    name: Роль для создания Access Key с региональным префиксом
    visibility: internal
    description: ''
    permissions:
      - iam.serviceAccounts.createAccessKeyWithPrefix
      - iam.userAccounts.createAccessKeyWithPrefix

  internal.identityagent:
    groups: [iam]
    name: (Внутренняя) Агент Identity
    visibility: internal
    description: ' доступ для создания сетей и presigned URL'
    permissions:
    - billingInternal.accounts.activateReferralCode
    - billingInternal.accounts.bindCloud
    - compute.instances.{get,list}
    - computeInternal.instances.{get,list}
    - iam.clouds.get
    - resource-manager.clouds.get
    - iam.serviceAccounts.issueCookie
    - iam.serviceAccounts.issueToken
    - iam.userAccounts.createAccessKey
    - iam.userAccounts.getAccessKey
    - iam.userAccounts.issueCookie
    - iam.userAccounts.issueToken
    - iam.userAccounts.presignUrl
    - iam.subjects.issueCookie
    - iam.subjects.issueToken
    - s3.objects.getObject
    - s3.objects.putObject
    - vpc.addresses.createExternal
    - vpc.addresses.createInternal
    - vpc.networks.create
    - vpc.networks.createDefaultSecurityGroup
    - vpc.networks.createRouteTable
    - vpc.networks.createSubnet
    - vpc.networks.use
    - vpc.subnets.create
    - vpc.subnets.assignExtraParams

  internal.tokenagent:
    groups: [iam]
    name: (Внутренняя) token agent
    visibility: internal
    description: Роль для инициализации хостов
    permissions:
    - iam.authorizedKeys.create
    - iam.serviceAccounts.createForHost
    - iam.tokenKeys.create

  internal.iamE2eTests:
    groups: [iam]
    name: (Внутренняя) IAM Private-API E2E Tests
    visibility: internal
    description: Роль для E2E тестов приватного API IAM
    permissions:
      - iam.serviceAccounts.issueCookie
      - iam.serviceAccounts.issueToken
      - iam.serviceAccounts.issueTokenForInstance
      - iam.userAccounts.issueCookie
      - iam.userAccounts.issueToken
      - iam.subjects.issueCookie
      - iam.subjects.issueToken
      - iam.resourceTypes.listAccessBindings
      - iam.resourceTypes.updateAccessBindings
      - iam.resourceTypes.listMemberships
      - iam.gizmo.listAccessBindings
      - iam.gizmo.updateAccessBindings
      - iam.root.listAccessBindings
      - iam.root.updateAccessBindings

  internal.iam.crossCloudBindings:
    groups: [iam]
    name: (Внутренняя) Редактор closs-cloud прав
    visibility: internal
    description: Системная роль для редактирования прав на ресурсы чужих облаков
    permissions:
      - iam.serviceAccounts.crossCloudBindings
      - iam.federatedUsers.crossCloudBindings

  internal.iam.accessBindings.viewer:
    groups: [iam]
    name: (Внутренняя) Чтение прав доступа
    visibility: internal
    description: Чтение прав доступа на ресурсах определённых типов и просмотр членства
    permissions:
      - iam.accessBindings.list
      - iam.resourceTypes.listMemberships

  internal.iam.accessBindings.admin:
    groups: [iam]
    name: (Внутренняя) Администрирование прав доступа
    visibility: internal
    description: Администрирование прав доступа на ресурсах определённых типов и просмотр членства
    includedRoles:
      - internal.iam.accessBindings.viewer
    permissions:
      - iam.accessBindings.update

  internal.iam.rootAccessBindingAdmin:
    groups: [iam]
    name: (Внутренняя) Администрирование прав доступа на root
    visibility: internal
    description: Администрирование прав доступа на корневой объект иерархии ресурсов
    permissions:
      - iam.root.listAccessBindings
      - iam.root.updateAccessBindings

  internal.iam.gizmoAccessBindingAdmin:
    groups: [iam]
    name: (Внутренняя) Администрирование прав доступа на gizmo
    visibility: internal
    description: Администрирование прав доступа на gizmo-ресурс
    permissions:
      - iam.gizmo.listAccessBindings
      - iam.gizmo.updateAccessBindings

  internal.iam.resourceTypes.admin:
    groups: [iam]
    name: (Внутренняя) Администрирование прав доступа на типы ресурсов
    visibility: internal
    description: Администрирование прав доступа на типы ресурсов
    permissions:
      - iam.resourceTypes.listAccessBindings
      - iam.resourceTypes.updateAccessBindings

  internal.iam.restrictionTypes.user:
    groups: [iam]
    name: (Внутренняя) Администрирование ограничениями
    visibility: internal
    description: Администрирование ограничения определённого типа на ресурсах
    permissions:
      - iam.restrictionTypes.use

  internal.iam.restrictionTypes.admin:
    groups: [iam]
    name: (Внутренняя) Администрирование прав доступа на типы ограничений
    visibility: internal
    description: Администрирование прав доступа на типы ограничений
    includedRoles:
      - internal.iam.restrictionTypes.user
    permissions:
      - iam.restrictionTypes.listAccessBindings
      - iam.restrictionTypes.updateAccessBindings

  internal.iam.quotas.admin:
    groups: [ iam ]
    name: (Внутренняя) Администрирование квот на ресурсы
    visibility: internal
    description: Администрирование лимитов квот на облака
    permissions:
      - iam.quotas.updateLimit

  internal.iam.agent:
    groups: [iam]
    name: (Внутренняя) IAM control plane
    visibility: internal
    description: Роль для инстансных SA IAM control plane
    permissions:
      - resource-manager.folders.get
      - organization-manager.organizations.listInvitations

  internal.iam.listResourceTypeMemberships:
    groups: [iam]
    name: (Внутренняя) Листинг членов ресурсов верхнего уровня
    visibility: internal
    description: Специальная роль для листинга членов ресурсов верхнего уровня
    permissions:
      - iam.resourceTypes.listMemberships

  internal.iam.sync:
    groups: [iam]
    name: Role for the service for syncing users and access rights with external systems
    visibility: internal
    description: ''
    permissions:
      - iam.operations.get
      - iam.operations.list
      - iam.accessBindings.list
      - iam.accessBindings.manageOwners
      - iam.accessBindings.update
      - iam.userAccounts.createManaged
      - iam.userOperations.list
      - iam.root.listAccessBindings
      - iam.root.updateAccessBindings
      - iam.serviceAccounts.listAccessBindings
      - iam.serviceAccounts.updateAccessBindings
      - iam.gizmo.listAccessBindings
      - iam.gizmo.updateAccessBindings
      - iam.userAccounts.getSshKey
      - iam.userAccounts.createSshKey
      - resource-manager.clouds.listAccessBindings
      - resource-manager.folders.listAccessBindings

  internal.iam.osLogins.admin:
    groups: [iam]
    name: (Внутренняя) Администрирование OS logins пользователей
    visibility: internal
    description: Просмотр и редактирование OS logins пользователей
    permissions:
      - iam.subjects.getOsLogin
      - iam.subjects.updateOsLogin

  internal.iam.sshKeys.admin:
    groups: [iam]
    name: (Внутренняя) Администрирование ssh keys пользователей и сервисных аккаунтов
    visibility: internal
    description: Просмотр и редактирование ssh keys пользователей и сервисных аккаунтов
    permissions:
      - iam.userAccounts.getSshKey
      - iam.userAccounts.createSshKey
      - iam.userAccounts.deleteSshKey
      - iam.serviceAccounts.getSshKey
      - iam.serviceAccounts.createSshKey
      - iam.serviceAccounts.deleteSshKey

  internal.iam.tokenCreatorFromUserJwt:
    groups: [iam]
    name: (Внутренняя) IAM роль для пользователей, разрешающая обменять JWT на IAM token
    visibility: internal
    description: Пользователей может обменять JWT на IAM token
    permissions:
      - iam.userAccounts.issueTokenFromJwt

  internal.iam.diagnostician:
    groups: [iam]
    name: (Внутренняя) Доступ к диагностическим ручкам IAM
    visibility: internal
    description: ''
    permissions:
      - iam.internal.diagnostics

  internal.iam.totpProfileCreator:
    groups: [iam]
    name: (Внутренняя) IAM роль для пользователей, разрешающая создавать TOTP профиль
    visibility: internal
    description: ''
    permissions:
      - iam.userAccounts.createTotpProfile

  internal.iam.userSettings.agent:
    groups: [iam]
    name: (Внутренняя) IAM роль для service accounts, разрешающая читать userSettings пользователей (locale,notifications)
    visibility: internal
    description: ''
    permissions:
      - iam.userAccounts.getSettings

  internal.iam.metaModelViewer:
    groups: [iam]
    name: (Внутренняя) Чтение метамодели авторизации
    visibility: internal
    description: ''
    permissions:
      - iam.permissionStages.get
      - iam.resourceTypes.get
      - iam.permissions.get
      - iam.roles.get
      - iam.oauthScopes.get
      - iam.oauthClients.get
      - iam.restrictionTypes.get

  internal.iam.metaModelEditor:
    groups: [iam]
    name: (Внутренняя) Изменение метамодели авторизации
    visibility: internal
    description: ''
    includedRoles:
      - internal.iam.metaModelViewer
    permissions:
      - iam.permissionStages.create
      - iam.restrictionTypes.{create,update}
      - iam.{resourceTypes,permissions,roles,oauthScopes,oauthClients}.create
      - iam.{resourceTypes,permissions,roles,oauthScopes,oauthClients}.update

  internal.iam.keyFingerprintSearcher:
    groups: [iam]
    name: (Внутренняя) Поиск ключей по fingerprint
    visibility: internal
    description: ''
    permissions:
      - iam.authorizedKeys.listByFingerprint
      - iam.accessKeys.listByFingerprint
